mtrand.c was removed from the NetHack 4 distribution for copyright
reasons (it has an LGPL2+ header, and based on that, cannot be
relicensed under the NGPL; although AFAICT there is no violation
involved anywhere in the sources, the resulting executables cannot be
used due to violating LGPL2 6p2 and LGPL3 4c).  So I'm going to leave
it in the repository history, but the file itself is replaced by this
description of the API while I reimplement it, as I want to ensure
that I don't copy any of the original file (so I won't leave it around
as a reference).

Description of mtrand.c's API:

mt_srand      Seeds a random number generator from an unsigned int, no return
mt_random     Returns a uniformly distributed random unsigned int; complains if
              in_zero_time_command and not generating_bones
mt_nextstate  Returns part of the internal RNG state that changes with (almost)
              every RNG call, as an unsigned int, does not change its state
save_mt_state Writes the RNG state to a memfile as 627 32-bit words
restore_mt_state
              Reads the RNG state written by save_mt_state from a memfile
display_rng   Takes an integer as argument, returns a uniformly distributed
              integer from 0 to that value minus 1; does not affect the main
              RNG seed and does not need to be saved/restored

display_rng was almost ceratinly written from scratch by daniel_t;
however, it's not in a file with an NGPL header, so for safety, I'm
going to rewrite that too.

(Based on the tentative ruling in Oracle v. Google, I'm going to
rename the functions as well. And delete mt_nextstate, because it's
unused).
